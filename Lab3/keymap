u8 toLower(u8 scode) {
  u8 ret = 0;
  switch (scode) {
    case 13: ret = '\t';
      break;
    case 28: ret = 'a';
      break;
    case 27: ret = 's';
      break;
    case 35: ret = 'd';
      break;
    case 43: ret = 'f';
      break;
    case 52: ret = 'g';
      break;
    case 51: ret = 'h';
      break;
    case 59: ret = 'j';
      break;
    case 66: ret = 'k';
      break;
    case 75: ret = 'l';
      break;
    case 76: ret = ';';
      break;
    case 82: ret = '\'';
      break;
    case 21: ret = 'q';
      break;
    case 29: ret = 'w';
      break;
    case 36: ret = 'e';
      break;
    case 45: ret = 'r';
      break;
    case 44: ret = 't';
      break;
    case 53: ret = 'y';
      break;
    case 60: ret = 'u';
      break;
    case 67: ret = 'i';
      break;
    case 68: ret = 'o';
	    break;
    case 77: ret = 'p';
	    break;
    case 84: ret = '[';
      break;
    case 91: ret = ']';
      break;
    case 93: ret = '\\';
      break;
    case 14: ret = '`';
      break;
    case 22: ret = '1';
      break;
    case 30: ret = '2';
      break;
    case 38: ret = '3';
      break;
    case 37: ret = '4';
      break;
    case 46: ret = '5';
      break;
    case 54: ret = '6';
      break;
    case 61: ret = '7';
      break;
    case 62: ret = '8';
      break;
    case 70: ret = '9';
      break;
    case 69: ret = '0';
      break;
    case 78: ret = '-';
      break;
    case 85: ret = '=';
      break;
    case 26: ret = 'z';
      break;
    case 34: ret = 'x';
      break;
    case 33: ret = 'c';
      break;
    case 42: ret = 'v';
      break;
    case 50: ret = 'b';
      break;
    case 49: ret = 'n';
      break;
    case 58: ret = 'm';
      break;
    case 65: ret = ',';
      break;
    case 73: ret = '.';
      break;
    case 74: ret = '/';
      break;
    case 41: ret = ' ';
      break;
    case 90: ret = '\n\r';
      break;
    case 102: ret = '\b';
      break;
  }
  return ret;
}

u8 toUpper(u8 scode) {
u8 ret = 0;
  switch (scode) {
    case 13: ret = '\t';
      break;
    case 28: ret = 'A';
      break;
    case 27: ret = 'S';
      break;
    case 35: ret = 'D';
      break;
    case 43: ret = 'F';
      break;
    case 52: ret = 'G';
      break;
    case 51: ret = 'H';
      break;
    case 59: ret = 'J';
      break;
    case 66: ret = 'K';
      break;
    case 75: ret = 'L';
      break;
    case 76: ret = ':';
      break;
    case 82: ret = '\"';
      break;
    case 21: ret = 'Q';
      break;
    case 29: ret = 'W';
      break;
    case 36: ret = 'E';
      break;
    case 45: ret = 'R';
      break;
    case 44: ret = 'T';
      break;
    case 53: ret = 'Y';
      break;
    case 60: ret = 'U';
      break;
    case	67: ret = 'I';
      break;
	  case 68: ret = 'O';
      break;
	  case 77: ret = 'P';
      break;
    case 84: ret = '{';
      break;
    case 91: ret = '}';
      break;
    case 93: ret = '|';
      break;
    case 14: ret = '~';
      break;
    case 22: ret = '!';
      break;
    case 30: ret = '@';
      break;
    case 38: ret = '#';
      break;
    case 37: ret = '$';
      break;
    case 46: ret = '%';
      break;
    case 54: ret = '^';
      break;
    case 61: ret = '&';
      break;
    case 62: ret = '*';
      break;
    case 70: ret = '(';
      break;
    case 69: ret = ')';
      break;
    case 78: ret = '_';
      break;
    case 85: ret = '+';
      break;
    case 26: ret = 'Z';
      break;
    case 34: ret = 'X';
      break;
    case 33: ret = 'C';
      break;
    case 42: ret = 'V';
      break;
    case 50: ret = 'B';
      break;
    case 49: ret = 'N';
      break;
    case 58: ret = 'M';
      break;
    case 65: ret = '<';
      break;
    case 73: ret = '>';
      break;
    case 74: ret = '?';
      break;
    case 41: ret = ' ';
      break;
    case 90: ret = '\n\r';
      break;
    case 102: ret = '\b';
      break;
  }
  return ret;
}

/* Scan codes to ASCII for unshifted keys; unused keys are left out */
/*char unsh[N_SCAN] = {
 0,033,'1','2','3','4','5','6',        '7','8','9','0', '-','=','\b','\t',
 'q','w','e','r','t','y','u','i',      'o','p','[',']', '\r', 0,'a','s',
 'd','f','g','h','j','k','l',';',       0,  0,  0,  0,  'z','x','c','v',
 'b','n','m',',','.','/', 0,'*',        0, ' '
};*/

/* Scan codes to ASCII for shifted keys; unused keys are left out */
/*char sh[N_SCAN] = {
 0,033,'!','@','#','$','%','^',        '&','*','(',')', '_', '+','\b','\t',
 'Q','W','E','R','T','Y','U','I',      'O','P','{','}', '\r', 0, 'A', 'S',
 'D','F','G','H','J','K','L',':',       0, '~', 0, '|', 'Z', 'X','C', 'V',
 'B','N','M','<','>','?',0,'*',         0, ' '
};*/
